name: 'Continuous Delivery'

on:
  push:
    branches: ["main"]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.11"
  IMAGE_NAME: "latam-delay-api"

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install deps
        run: |
          pip install -r requirements.txt
          pip install -r requirements-test.txt
      - name: Lint & Tests
        run: |
          ruff check .
          ruff format --check .
          pytest -q

  gate:
    runs-on: ubuntu-latest
    outputs:
      can_deploy: ${{ steps.check.outputs.can_deploy }}
    steps:
      - id: check
        shell: bash
        run: |
          # Consider ALL required secrets; output true only if every one is set
          if [[ -n "${{ secrets.GCP_SA_KEY }}" && \
                -n "${{ secrets.GCP_PROJECT_ID }}" && \
                -n "${{ secrets.GCP_REGION }}" && \
                -n "${{ secrets.GAR_REPO }}" && \
                -n "${{ secrets.CLOUD_RUN_SERVICE }}" && \
                -n "${{ secrets.CLOUD_RUN_REGION }}" ]]; then
            echo "can_deploy=true" >> "$GITHUB_OUTPUT"
          else
            echo "can_deploy=false" >> "$GITHUB_OUTPUT"
          fi

  train-and-deploy:
    needs: [verify, gate]
    if: ${{ needs.gate.outputs.can_deploy == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install deps (for training)
        run: pip install -r requirements.txt

      - name: Train and persist model (.pkl)
        run: |
          python -m challenge.train --data data/data.csv --output models/delay_model.pkl
          test -f models/delay_model.pkl

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

      - name: Build & push image
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_REGION: ${{ secrets.GCP_REGION }}
          GAR_REPO: ${{ secrets.GAR_REPO }}
        run: |
          IMAGE_URI="${GCP_REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${GAR_REPO}/${{ env.IMAGE_NAME }}:${GITHUB_SHA}"
          echo "IMAGE_URI=${IMAGE_URI}" >> $GITHUB_ENV
          docker build -t "${IMAGE_URI}" .
          docker push "${IMAGE_URI}"

      - name: Deploy to Cloud Run
        env:
          CLOUD_RUN_SERVICE: ${{ secrets.CLOUD_RUN_SERVICE }}
          CLOUD_RUN_REGION: ${{ secrets.CLOUD_RUN_REGION }}
          IMAGE_URI: ${{ env.IMAGE_URI }}
        run: |
          gcloud run deploy "${CLOUD_RUN_SERVICE}" \
            --image "${IMAGE_URI}" \
            --region "${CLOUD_RUN_REGION}" \
            --platform managed \
            --allow-unauthenticated \
            --port 8000 \
            --set-env-vars MODEL_VERSION=${GITHUB_SHA}
